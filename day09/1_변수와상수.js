/*
    JS 리터럴 데이터
    Number(숫자)    : 10, 3.14 ...
    String(문자열)  : "유재석", '강호동', `신동엽`
    Boolean(논리)   : true, false
    undefined       : 값이 없다는 뜻 (null과는 다른 의미)

    [ 변수 ] : 하나의 자료/데이터를 저장하는 메모리 공간
        let         : 변수를 선언하기 위한 키워드
        변수명      : 메모리 공간의 상징적인 이름
        =           : 오른쪽 항을 왼쪽 항에 대입한다
        데이터(값)  : 변수에 저장할 데이터

    [ 상수 ] : 하나의 자료/데이터를 저장하는 메모리 공간 (선언 후에는 수정이 불가능)
        const       : 상수를 선언하기 위한 키워드
        변수명      : 메모리 공간의 상징적인 이름
        =           : 오른쪽 항을 왼쪽 항에 대입한다
        데이터(값)  : 변수에 저장할 데이터
*/
// [1] 변수 선언
let name = "유재석";
// [2] 변수가 가지고 있는 데이터(값) 반환
name
// [3] 변수의 데이터(값) 변경
name = "강호동";
// [4] 변수가 가지고 있는 데이터(값)과 다른 데이터(값)과 연산이 가능
let name2 = name + 10;

// [1] 상수 선언
const age = 40;
// [2] 상수가 가지고 있는 데이터(값) 반환
age
// [3] 오류 (Assignment to constant variable : 상수가 가지고 있는 데이터는 변경 할 수 없다.)
// age = 100;
// [4] 상수가 가지고 있는 데이터(값)과 다른 데이터(값)과 연산이 가능
let age2 = age + 20;

// [ 생각해보기 ] 아래 코드에서 변수의 개수와 리터럴의 개수를 파악하시오. 변수 : 3, 리터럴 : 2
let point1 = 50;
let point2 = 100;
let point3 = point1 + point2;
// let point3 = point1 + point2; 연산 순서
/*
    [1] = 대입연산자 기준으로 오른쪽 코드가 우선
    [2] 변수의 값 호출, point1 (50)
    [3] 변수의 값 호출, point2 (100)
    [4] + 연산자, point1 (50) + point2 (100)
    [5] 연산 결과를 왼쪽 항에 대입, point3 = 150
*/